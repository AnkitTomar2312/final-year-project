{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\final-year-project\\\\client\\\\src\\\\components\\\\banner\\\\banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./banner.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const [showBanner, setShowBanner] = useState(false); // Initially, the banner is not shown\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowBanner(true); // After 4 seconds, the banner is shown\n    }, 4000);\n    return () => {\n      clearTimeout(timer); // Clear the timer when the component is unmounted\n    };\n  }, []); // The empty array means this effect runs once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showBanner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Banner Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBanner(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Banner, \"1grwDPkfvitbAJm4HZFczy8eoqw=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","_s","showBanner","setShowBanner","timer","setTimeout","clearTimeout","children","className","style","backgroundColor","display","justifyContent","alignItems","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Project/final-year-project/client/src/components/banner/banner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./banner.css\"; // Import the CSS file\r\n\r\nconst Banner = () => {\r\n  const [showBanner, setShowBanner] = useState(false); // Initially, the banner is not shown\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShowBanner(true); // After 4 seconds, the banner is shown\r\n    }, 4000);\r\n\r\n    return () => {\r\n      clearTimeout(timer); // Clear the timer when the component is unmounted\r\n    };\r\n  }, []); // The empty array means this effect runs once after the initial render\r\n\r\n  return (\r\n    <>\r\n      {showBanner && (\r\n        <div className=\"banner\">\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <h1>Your Banner Content</h1>\r\n            <button onClick={() => setShowBanner(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXG,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGL,UAAU,iBACTL,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACrBV,OAAA;QACEY,KAAK,EAAE;UACLC,eAAe,EAAE,MAAM;UACvBC,OAAO,EAAE,MAAM;UACfC,cAAc,EAAE,QAAQ;UACxBC,UAAU,EAAE,QAAQ;UACpBC,aAAa,EAAE;QACjB,CAAE;QAAAP,QAAA,gBAEFV,OAAA;UAAAU,QAAA,EAAI;QAAmB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BrB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAC,KAAK,CAAE;UAAAI,QAAA,EAAC;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP,CAAC;AAACjB,EAAA,CAjCID,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}