{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\final-year-project\\\\client\\\\src\\\\pages\\\\home\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport HomeLayout from \"../../layout/HomeLayout/HomeLayout\";\nimport Splash from \"../../components/splash/splash\";\nimport Chat from \"../../components/Chat/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = ({\n  children\n}) => {\n  _s();\n  const [loader, setLoader] = useState(true);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setLoader(false);\n    }, 4000);\n\n    // Clean up the timeout when the component unmounts\n    return () => clearTimeout(timeoutId);\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(HomeLayout, {\n    children: loader ? /*#__PURE__*/_jsxDEV(Splash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        padding: \"60px 24px 100px 24px\",\n        backgroundColor: \"#f3f4f6\",\n        height: \"auto\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Index, \"v9Gmr36LIRqHprS819AlpxmZHdc=\");\n_c = Index;\nexport default Index;\n//  {/* <Chat /> */}\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","HomeLayout","Splash","Chat","jsxDEV","_jsxDEV","Index","children","_s","loader","setLoader","timeoutId","setTimeout","clearTimeout","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","backgroundColor","height","width","_c","$RefreshReg$"],"sources":["D:/Project/final-year-project/client/src/pages/home/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport HomeLayout from \"../../layout/HomeLayout/HomeLayout\";\r\nimport Splash from \"../../components/splash/splash\";\r\nimport Chat from \"../../components/Chat/Chat\";\r\n\r\nconst Index = ({ children }) => {\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setLoader(false);\r\n    }, 4000);\r\n\r\n    // Clean up the timeout when the component unmounts\r\n    return () => clearTimeout(timeoutId);\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  return (\r\n    <HomeLayout>\r\n      {loader ? (\r\n        <Splash />\r\n      ) : (\r\n        <section\r\n          style={{\r\n            padding: \"60px 24px 100px 24px\",\r\n            backgroundColor: \"#f3f4f6\",\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n          }}\r\n        ></section>\r\n      )}\r\n    </HomeLayout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n//  {/* <Chat /> */}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,IAAI,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCF,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA,CAACJ,UAAU;IAAAM,QAAA,EACRE,MAAM,gBACLJ,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEVZ,OAAA;MACEa,KAAK,EAAE;QACLC,OAAO,EAAE,sBAAsB;QAC/BC,eAAe,EAAE,SAAS;QAC1BC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE;MACT;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAACT,EAAA,CA5BIF,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AA8BX,eAAeA,KAAK;AACpB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}