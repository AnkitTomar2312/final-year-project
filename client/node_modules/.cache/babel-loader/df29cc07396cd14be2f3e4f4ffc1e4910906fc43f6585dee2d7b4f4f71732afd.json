{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\React-Practice\\\\final-year-project\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport SideMenu from \"../SideMenu/SideMenu\";\nimport \"./Chat.css\";\nimport \"./normal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"How can I help you?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const newMessage = {\n      user: \"me\",\n      message: input\n    };\n    setChatLog([...chatLog, newMessage]);\n    setInput(\"\");\n    try {\n      const response = await fetch(\"http://localhost:3080/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: newMessage.message\n        })\n      });\n      const data = await response.json();\n      if (data.message) {\n        // Update the last message in the chatLog with the response\n        setChatLog(prevChatLog => [...prevChatLog.slice(0, -1), {\n          user: \"gpt\",\n          message: data.message\n        }]);\n      } else {\n        console.error(\"Unexpected response format from server:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error communicating with the server:\", error);\n    }\n  }\n  const handleChange = e => {\n    return setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search here...\",\n            value: input,\n            className: \"chat-input-textarea\",\n            rows: \"1\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"ZYF97SG9CI3yjoNViGUQ593UGbY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","ChatMessage","SideMenu","jsxDEV","_jsxDEV","Chat","_s","input","setInput","chatLog","setChatLog","user","message","handleSubmit","e","preventDefault","newMessage","response","fetch","method","headers","body","JSON","stringify","data","json","prevChatLog","slice","console","error","handleChange","target","value","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","rows","onChange","_c","$RefreshReg$"],"sources":["C:/Web/React-Practice/final-year-project/client/src/components/Chat/Chat.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport SideMenu from \"../SideMenu/SideMenu\";\r\nimport \"./Chat.css\";\r\nimport \"./normal.css\";\r\n\r\nfunction Chat() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [chatLog, setChatLog] = useState([\r\n    {\r\n      user: \"gpt\",\r\n      message: \"How can I help you?\",\r\n    },\r\n  ]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const newMessage = { user: \"me\", message: input };\r\n    setChatLog([...chatLog, newMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3080/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          message: newMessage.message,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.message) {\r\n        // Update the last message in the chatLog with the response\r\n        setChatLog((prevChatLog) => [\r\n          ...prevChatLog.slice(0, -1),\r\n          { user: \"gpt\", message: data.message },\r\n        ]);\r\n      } else {\r\n        console.error(\"Unexpected response format from server:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error communicating with the server:\", error);\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    return setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"chatbox\">\r\n        <div className=\"chat-log\">\r\n          {chatLog.map((message, index) => (\r\n            <ChatMessage key={index} message={message} />\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input-holder\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              placeholder=\"Search here...\"\r\n              value={input}\r\n              className=\"chat-input-textarea\"\r\n              rows=\"1\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}