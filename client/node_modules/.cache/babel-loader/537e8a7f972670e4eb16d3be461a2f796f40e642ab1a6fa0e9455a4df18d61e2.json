{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\final-year-project\\\\client\\\\src\\\\pages\\\\questions\\\\array.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionsData = {\n  questions: [{\n    title: \"Check if pair with given Sum exists in Array (Two Sum)\",\n    description: \"Given an array A[ ] of n numbers and another number x, the task is to check whether or not there exist two elements in A[] whose sum is exactly x.\",\n    examples: [{\n      input: {\n        arr: [0, -1, 2, -3, 1],\n        x: -2\n      },\n      output: \"Yes\",\n      explanation: \"If we calculate the sum of the output, 1 + (-3) = -2\"\n    }, {\n      input: {\n        arr: [1, -2, 1, 0, 5],\n        x: 0\n      },\n      output: \"No\",\n      explanation: \"Since the array is in decreasing order, no possible way exists to solve the problem.\"\n    }]\n  }, {\n    title: \"Best Time to Buy and Sell Stock\",\n    description: \"Given an array prices[] of length N, representing the prices of the stocks on different days, the task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. Note: Stock must be bought before being sold.\",\n    examples: [{\n      input: {\n        prices: [7, 1, 5, 3, 6, 4]\n      },\n      output: 5,\n      explanation: \"The lowest price of the stock is on the 2nd day, i.e. price = 1. Starting from the 2nd day, the highest price of the stock is witnessed on the 5th day, i.e. price = 6. Therefore, the maximum possible profit = 6 – 1 = 5.\"\n    }, {\n      input: {\n        prices: [7, 6, 4, 3, 1]\n      },\n      output: 0,\n      explanation: \"Since the array is in decreasing order, no possible way exists to solve the problem.\"\n    }]\n  }\n  // ... Add more questions here ...\n  ]\n};\n\nconst QuestionsList = ({\n  questions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.examples.map((example, exampleIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Example \", exampleIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), \" \", JSON.stringify(example.input)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), \" \", JSON.stringify(example.output)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), example.explanation && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Explanation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this), \" \", example.explanation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, exampleIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionsList;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ReactJS Questions List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionsList, {\n      questions: questionsData.questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionsList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","questionsData","questions","title","description","examples","input","arr","x","output","explanation","prices","QuestionsList","children","map","question","index","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","example","exampleIndex","JSON","stringify","_c","App","_c2","$RefreshReg$"],"sources":["D:/Project/final-year-project/client/src/pages/questions/array.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst questionsData = {\r\n  questions: [\r\n    {\r\n      title: \"Check if pair with given Sum exists in Array (Two Sum)\",\r\n      description:\r\n        \"Given an array A[ ] of n numbers and another number x, the task is to check whether or not there exist two elements in A[] whose sum is exactly x.\",\r\n      examples: [\r\n        {\r\n          input: { arr: [0, -1, 2, -3, 1], x: -2 },\r\n          output: \"Yes\",\r\n          explanation: \"If we calculate the sum of the output, 1 + (-3) = -2\",\r\n        },\r\n        {\r\n          input: { arr: [1, -2, 1, 0, 5], x: 0 },\r\n          output: \"No\",\r\n          explanation:\r\n            \"Since the array is in decreasing order, no possible way exists to solve the problem.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Best Time to Buy and Sell Stock\",\r\n      description:\r\n        \"Given an array prices[] of length N, representing the prices of the stocks on different days, the task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. Note: Stock must be bought before being sold.\",\r\n      examples: [\r\n        {\r\n          input: { prices: [7, 1, 5, 3, 6, 4] },\r\n          output: 5,\r\n          explanation:\r\n            \"The lowest price of the stock is on the 2nd day, i.e. price = 1. Starting from the 2nd day, the highest price of the stock is witnessed on the 5th day, i.e. price = 6. Therefore, the maximum possible profit = 6 – 1 = 5.\",\r\n        },\r\n        {\r\n          input: { prices: [7, 6, 4, 3, 1] },\r\n          output: 0,\r\n          explanation:\r\n            \"Since the array is in decreasing order, no possible way exists to solve the problem.\",\r\n        },\r\n      ],\r\n    },\r\n    // ... Add more questions here ...\r\n  ],\r\n};\r\n\r\nconst QuestionsList = ({ questions }) => {\r\n  return (\r\n    <div>\r\n      {questions.map((question, index) => (\r\n        <div key={index} style={{ marginBottom: \"20px\" }}>\r\n          <h3>{question.title}</h3>\r\n          <p>{question.description}</p>\r\n          <ul>\r\n            {question.examples.map((example, exampleIndex) => (\r\n              <li key={exampleIndex}>\r\n                <strong>Example {exampleIndex + 1}:</strong>\r\n                <ul>\r\n                  <li>\r\n                    <strong>Input:</strong> {JSON.stringify(example.input)}\r\n                  </li>\r\n                  <li>\r\n                    <strong>Output:</strong> {JSON.stringify(example.output)}\r\n                  </li>\r\n                  {example.explanation && (\r\n                    <li>\r\n                      <strong>Explanation:</strong> {example.explanation}\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>ReactJS Questions List</h1>\r\n      <QuestionsList questions={questionsData.questions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}